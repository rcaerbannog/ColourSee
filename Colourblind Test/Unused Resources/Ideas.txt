Use java.awt.BufferedImage to get the colour of a pixel and change it (see Javadoc)
https://docs.oracle.com/javase/8/docs/api/java/awt/image/BufferedImage.html
https://stackoverflow.com/questions/3325546/how-to-color-a-pixel

Use code from Picture Lab to select and change pixels

Familiariaze yourself with the Java 2D API:
https://docs.oracle.com/javase/tutorial/2d/

[Message sent to Ivan over Discord]
We can reuse a lot of code from the AP Picture Lab for the game. In particular I can look at ImageExplorer to select pixels and the various Picture subclasses to change pixel colours.
It relies on java.awt.image.BufferedImage if you want to look at how it works.
After that we have to develop a custom method for filling in the image. Basically, start from the pixel selected by the player and change it to some other Color, unless the pixel is a border (Color). Then, do the same for the pixel above, below, left, and right.
To keep track of which pixels have already been affected we use a boolean array corresponding to the array of pixels that tracks which pixels have already been changed, which stops an infinite loop from occurring. (This will be similar to the recursion assignment's Maze problem.)

Summary:
-Use ImageExplorer for selecting pixels
-Use Picture classes for changing pixel colours
-Use ColorPicker for the palette
-If needed, take a look at the code for the Elevens assignment to see how it SELECTS the cards using mouse
-Create our own "fill" method by using recursion Maze code