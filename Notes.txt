FileChooser.getMediaDirectory() controls how files are chosen.
If there is time, re-implement the ZOOM bar in Level or the level creator

SPARE CODE
------------------------

Display pixel info methods, which can be used in level creator:
  /**
   * Method to display the pixel information from the passed x and y but
   * also converts x and y from strings
   * @param xString the x value as a string from the user
   * @param yString the y value as a string from the user
   */
  public void displayPixelInformation(String xString, String yString)
  {
    int x = -1;
    int y = -1;
    try {
      x = Integer.parseInt(xString);
      y = Integer.parseInt(yString);
    } catch (Exception ex) {
    }

    if (x >= 0 && y >= 0) {
      displayPixelInformation(x,y);
    }
  }

  /**
   * Method to display pixel information for the passed x and y
   * @param pictureX the x value in the picture
   * @param pictureY the y value in the picture
   */
  private void displayPixelInformation(int pictureX, int pictureY)
  {
    // check that this x and y are in range
    if (isLocationInPicture(pictureX, pictureY))
    {
      // save the current x and y index
      colIndex = pictureX;
      rowIndex = pictureY;

      // get the pixel at the x and y
      Pixel pixel = new Pixel(picture,colIndex,rowIndex);

      // set the values based on the pixel
      System.out.println("PIXEL INFO");
      System.out.println(colIndex);
      System.out.println(rowIndex);
      System.out.println("R: " + pixel.getRed());
      System.out.println("G: " + pixel.getGreen());
      System.out.println("B: " + pixel.getBlue());
    }
    else
    {
      clearInformation();
    }

    // notify the image display of the current x and y
    imageDisplay.setCurrentX((int) (colIndex * zoomFactor));
    imageDisplay.setCurrentY((int) (rowIndex * zoomFactor));
  }

  /**
   * Method to display pixel information based on a mouse event
   * @param e a mouse event
   */
  private void displayPixelInformation(MouseEvent e)
  {

    // get the cursor x and y
    int cursorX = e.getX();
    int cursorY = e.getY();

    // get the x and y in the original (not scaled image)
    int pictureX = (int) (cursorX / zoomFactor);
    int pictureY = (int) (cursorY / zoomFactor);

    // display the information for this x and y
    displayPixelInformation(pictureX,pictureY);

  }

  /**
   * Method to clear the labels and current color and reset the
   * current index to -1
   */
  private void clearInformation()
  {
    colIndex = -1;
    rowIndex = -1;
  }